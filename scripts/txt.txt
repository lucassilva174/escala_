dateClick: async function (info) {
        // ✅ Ajuste de fuso horário: converte corretamente para data local em ISO (yyyy-mm-dd)
        const localDate = new Date(
          info.date.getTime() - info.date.getTimezoneOffset() * 60000
        );
        const data = localDate.toISOString().split("T")[0];

        const lista = mapaPorData[data];
        if (!lista) return;

        const container = document.getElementById("modalLista");
        const titulo = document.getElementById("modalData");

        const manhaEl = document.getElementById("listaManha");
        const noiteEl = document.getElementById("listaNoite");

        manhaEl.innerHTML = "";
        noiteEl.innerHTML = "";

        // ✅ Agora usa nome do evento + data, mantendo a data correta
        // ✅ Remove qualquer texto entre parênteses e espaços extras
        let descricaoBruta = lista[0]?.descricao || "Evento";
        const descricaoEvento = descricaoBruta
          .replace(/\s*\(.*?\)\s*/g, "")
          .trim();

        const [ano, mes, diaNum] = data.split("-");
        titulo.innerHTML = `<strong>${descricaoEvento}</strong><br>Data: ${diaNum}/${mes}/${ano}`;

        lista.forEach((item) => {
          const li = document.createElement("li");
          li.textContent = `${item.nome} - ${item.instrumento}`;
          const desc = item.descricao?.toLowerCase() || "";

          (desc.includes("noite") ? noiteEl : manhaEl).appendChild(li);
        });

        const botao = document.getElementById("btnAddLink");
        const isMinistro = usuarioLogado.instrumentos?.includes("Ministro");
        const isAdmin = usuarioLogado.admin === true;

        if (isMinistro || isAdmin) {
          botao.style.display = "inline-block";
          botao.onclick = () => abrirModalLinks(data, descricaoEvento);
        } else {
          botao.style.display = "none";
          abrirModalLinks(data, descricaoEvento);
        }

        container.style.display = "flex";
      },